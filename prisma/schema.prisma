// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "../ERD.png"
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  hashedPassword String
  refreshToken   String?
  tokens         Token[]
  entity         Entity?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  deletedAt      DateTime?

  @@map("users")
}

model Entity {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @unique
  firstName String?
  lastName  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("entities")
}

model Token {
  id        String    @id @default(uuid())
  value     String
  expiresIn Int
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("tokens")
}

model Category {
  id          String    @id @default(uuid())
  name        String
  description String?
  observation String?
  dish        Dish?     @relation(fields: [dishId], references: [id])
  dishId      String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  @@map("categories")
}

model Item {
  id          String    @id @default(uuid())
  name        String
  description String?
  price       Float?
  type        ItemType?
  dish        Dish?     @relation(fields: [dishId], references: [id])
  dishId      String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  @@map("items")
}

model Dish {
  id          String     @id @default(uuid())
  name        String
  items       Item[]
  description String?
  categories  Category[]
  price      Float?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  deletedAt   DateTime?
}

//Enum
enum ItemType {
  drink
  perishable
}
