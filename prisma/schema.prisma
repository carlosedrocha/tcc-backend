// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "../ERD.png"
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  password     String
  token        String
  refreshToken String
  tokens       Token[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime?
}

model Token {
  id        String    @id @default(uuid())
  value     String
  expiresIn Int
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Item {
  id          String    @id @default(uuid())
  name        String
  description String?
  price       Float
  type        ItemType
  stock       Int
  dishes      Dish[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
}

model Dish {
  id          String     @id @default(uuid())
  name        String
  items       Item[]
  description String
  category    Category[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  deletedAt   DateTime?
}

model Category {
  id        String    @id @default(uuid())
  name      String
  dish      Dish?     @relation(fields: [dishId], references: [id])
  dishId    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

//Enum
enum ItemType {
  drink
  perishable
}

// model Entity {
//   id   String @id @default(uuid())
//   name String

//   createdAt DateTime  @default(now())
//   updatedAt DateTime  @updatedAt
//   deletedAt DateTime?
// }
